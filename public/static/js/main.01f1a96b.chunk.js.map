{"version":3,"sources":["logo.svg","components/LaunchesItem.js","contexts/FilterContext.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LaunchItem","launch","id","name","date_local","success","className","classNames","format","to","FilterContext","createContext","FilterContextProvider","props","useState","successFilter","setSucessFilter","failFilter","setFailFilter","Provider","value","handleSuccessFilter","filter","children","MissionKey","useContext","handleCheckbox","e","target","type","onChange","checked","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","console","log","filteredLaunches","launches","totalLaunches","length","sort","a","b","Fragment","map","key","flight_number","LAUNCH_QUERY","Launch","match","params","variables","rocket","displayLaunch","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.01f1a96b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.03637b0f.svg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst LaunchItem = ({ launch: { id, name, date_local, success } }) => {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{' '}\n            <span\n              className={classNames({\n                'text-success': success,\n                'text-danger': !success,\n              })}\n            >\n              {name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${id}`} className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchItem;\n","import React, { useState, createContext } from 'react';\n\nexport const FilterContext = createContext();\n\nconst FilterContextProvider = (props) => {\n  const [successFilter, setSucessFilter] = useState(false);\n  const [failFilter, setFailFilter] = useState(false);\n\n  const handleSuccessFilter = (filter) => {\n    if (filter === 'success') setSucessFilter(!successFilter);\n    if (filter === 'fail') setFailFilter(!failFilter);\n  };\n\n  return (\n    <FilterContext.Provider\n      value={{ successFilter, failFilter, handleSuccessFilter }}\n    >\n      {props.children}\n    </FilterContext.Provider>\n  );\n};\n\nexport default FilterContextProvider;\n","import React, { useContext } from 'react';\nimport { FilterContext } from '../contexts/FilterContext';\n\nconst MissionKey = () => {\n  const { successFilter, failFilter, handleSuccessFilter } = useContext(\n    FilterContext\n  );\n\n  const handleCheckbox = (e) => {\n    handleSuccessFilter(e.target.name);\n  };\n\n  return (\n    <div className=\"my-3\">\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"success\"\n          onChange={handleCheckbox}\n          checked={successFilter}\n        />\n        <label className=\"form-check-label\">\n          <span className=\"px-3 mr-2 bg-success\" /> = Sucess\n        </label>\n      </div>\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"fail\"\n          onChange={handleCheckbox}\n          checked={failFilter}\n        />\n        <label className=\"form-check-label\">\n          <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default MissionKey;\n","import React, { useContext } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport LaunchItem from './LaunchesItem';\nimport MissionKey from './MissionKey';\nimport { FilterContext } from '../contexts/FilterContext';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      id\n      flight_number\n      name\n      date_local\n      success\n    }\n  }\n`;\n\nconst Launches = () => {\n  const { successFilter, failFilter } = useContext(FilterContext);\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) return <h4>Loading...</h4>;\n  if (error) console.log(error);\n\n  let filteredLaunches = data.launches;\n  let totalLaunches = filteredLaunches.length;\n\n  if ((successFilter && failFilter) || (!successFilter && !failFilter)) {\n    filteredLaunches = data.launches;\n    totalLaunches = filteredLaunches.length;\n  }\n  if (successFilter && !failFilter) {\n    filteredLaunches = data.launches.filter((launch) => launch.success);\n    totalLaunches = filteredLaunches.length;\n  }\n  if (failFilter && !successFilter) {\n    filteredLaunches = data.launches.filter((launch) => !launch.success);\n    totalLaunches = filteredLaunches.length;\n  }\n\n  filteredLaunches.sort((a, b) => (a.date_local < b.date_local ? 1 : -1));\n\n  const displayLaunches = () => {\n    return filteredLaunches.map((launch) => (\n      <LaunchItem key={launch.flight_number} launch={launch} />\n    ));\n  };\n\n  return (\n    <React.Fragment>\n      <h1 className=\"display-4 my-3\">\n        Launches <small className=\"text-muted\">(total: {totalLaunches})</small>\n      </h1>\n      <MissionKey />\n      {displayLaunches()}\n    </React.Fragment>\n  );\n};\n\nexport default Launches;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($id: String!) {\n    launch(id: $id) {\n      flight_number\n      name\n      success\n      date_local\n      rocket {\n        id\n        name\n        type\n      }\n    }\n  }\n`;\n\nconst Launch = (props) => {\n  const { id } = props.match.params;\n\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { id },\n  });\n\n  const displayLaunch = () => {\n    if (loading) return <h4>Loading...</h4>;\n    if (error) console.log(error);\n\n    const { name, flight_number, success, date_local, rocket } = data.launch;\n\n    return (\n      <div>\n        <h1 className=\"display-4 my-3\">\n          <span className=\"text-light\">Mission:</span> {name}\n        </h1>\n        <h4 className=\"mb-3\">Launch Details</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n          <li className=\"list-group-item\">\n            Launch Year: <Moment format=\"YYYY\">{date_local}</Moment>\n          </li>\n          <li className=\"list-group-item\">\n            Launch Successful:{' '}\n            <span\n              className={classNames({\n                'text-success': success,\n                'text-danger': !success,\n              })}\n            >\n              {success ? 'Yes' : 'No'}\n            </span>\n          </li>\n        </ul>\n        <h4 className=\"my-3\">Rocket Details</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Rocket ID: {rocket.id}</li>\n          <li className=\"list-group-item\">Rocket Name: {rocket.name}</li>\n          <li className=\"list-group-item\">Rocket Type: {rocket.type}</li>\n        </ul>\n        <hr />\n        <Link to=\"/\" className=\"btn btn-secondary\">\n          Back\n        </Link>\n      </div>\n    );\n  };\n\n  return <React.Fragment>{displayLaunch()}</React.Fragment>;\n};\n\nexport default Launch;\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport logo from './logo.svg';\n\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport FilterContextProvider from './contexts/FilterContext';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <FilterContextProvider>\n        <Router>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"SpaceX\"\n              style={{ width: 300, display: 'block', margin: 'auto' }}\n            />\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:id\" component={Launch} />\n          </div>\n        </Router>\n      </FilterContextProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}